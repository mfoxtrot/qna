.question
  p= @question.title
- if user_signed_in? && current_user.author_of?(@question)
  = link_to 'Delete question', question_path(@question), method: :delete

p= @question.body

.question_vote
  .message
  p Votes
  .links
    div class =(['new_vote', @vote.nil? ? nil : 'hide'].join(' '))
      p
        = link_to 'Vote up', vote_up_question_path(@question), method: :post, remote: true, data: {type: :json }, class: 'vote_up_link'
      p
        = link_to 'Vote down', vote_down_question_path(@question), method: :post, remote: true, data: {type: :json}, class: 'vote_down_link'
    div class =(['existing_vote', @vote.nil? ? 'hide' : nil].join(' '))
      p.vote_value
        - unless @vote.nil?
          = @vote.value
      p
        = link_to 'Delete vote', vote_delete_question_path(@question), method: :post, remote: true, data: {type: :json}, class: 'vote_delete_link'

p Attachments
.attachments
  ul
    = render @question.attachments
.answers
  ol
    = render @question.answers
br
= form_with(model: [@question, @answer], remote:true ) do |f|
  = render 'shared/errors', resource: @answer
  = f.label :body
  .answer-errors
  = f.text_area :body
  p Attachments
  p
    = f.fields_for :attachments do |attachment|
      = render 'attachment_fields', f: attachment
    .links
      = link_to_add_association 'add file', f, :attachments, class: 'attachment_links'
  = f.submit 'Post an answer'
